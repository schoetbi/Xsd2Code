// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 2.8.2.25456
//    <NameSpace>test</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><HidePrivateFieldInIDE>True</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><IncludeSerializeMethod>False</IncludeSerializeMethod><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><DisableDebug>True</DisableDebug><CustomUsings></CustomUsings>
//  <auto-generated>
// ------------------------------------------------------------------------------
namespace test
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class Actor
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string firstnameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string lastnameField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool principalActorField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool principalActorFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string nationalityField;

        public Actor()
        {
            this.nationalityField = "US";
        }

        /// <remarks/>
        public string firstname
        {
            get
            {
                return this.firstnameField;
            }
            set
            {
                if ((this.firstnameField != null))
                {
                    if ((firstnameField.Equals(value) != true))
                    {
                        this.firstnameField = value;
                        this.OnPropertyChanged("firstname");
                    }
                }
                else
                {
                    this.firstnameField = value;
                    this.OnPropertyChanged("firstname");
                }
            }
        }

        /// <remarks/>
        public string lastname
        {
            get
            {
                return this.lastnameField;
            }
            set
            {
                if ((this.lastnameField != null))
                {
                    if ((lastnameField.Equals(value) != true))
                    {
                        this.lastnameField = value;
                        this.OnPropertyChanged("lastname");
                    }
                }
                else
                {
                    this.lastnameField = value;
                    this.OnPropertyChanged("lastname");
                }
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PrincipalActor
        {
            get
            {
                return this.principalActorField;
            }
            set
            {
                if ((principalActorField.Equals(value) != true))
                {
                    this.principalActorField = value;
                    this.OnPropertyChanged("PrincipalActor");
                }
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrincipalActorSpecified
        {
            get
            {
                return this.principalActorFieldSpecified;
            }
            set
            {
                if ((principalActorFieldSpecified.Equals(value) != true))
                {
                    this.principalActorFieldSpecified = value;
                    this.OnPropertyChanged("PrincipalActorSpecified");
                }
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("US")]
        public string nationality
        {
            get
            {
                return this.nationalityField;
            }
            set
            {
                if ((this.nationalityField != null))
                {
                    if ((nationalityField.Equals(value) != true))
                    {
                        this.nationalityField = value;
                        this.OnPropertyChanged("nationality");
                    }
                }
                else
                {
                    this.nationalityField = value;
                    this.OnPropertyChanged("nationality");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string info)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null)
            {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class DvdCollection : System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<dvd> dvdsField;

        public DvdCollection()
        {
            if ((this.dvdsField == null))
            {
                this.dvdsField = new List<dvd>();
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dvds")]
        public List<dvd> Dvds
        {
            get
            {
                return this.dvdsField;
            }
            set
            {
                if ((this.dvdsField != null))
                {
                    if ((dvdsField.Equals(value) != true))
                    {
                        this.dvdsField = value;
                        this.OnPropertyChanged("Dvds");
                    }
                }
                else
                {
                    this.dvdsField = value;
                    this.OnPropertyChanged("Dvds");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string info)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null)
            {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class dvd
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string titleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private Styles styleField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<Actor> actorField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private int publishYearField;

        public dvd()
        {
            if ((this.actorField == null))
            {
                this.actorField = new List<Actor>();
            }
            this.styleField = Styles.Action;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                if ((this.titleField != null))
                {
                    if ((titleField.Equals(value) != true))
                    {
                        this.titleField = value;
                        this.OnPropertyChanged("Title");
                    }
                }
                else
                {
                    this.titleField = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }

        /// <remarks/>
        public Styles Style
        {
            get
            {
                return this.styleField;
            }
            set
            {
                if ((this.styleField != null))
                {
                    if ((styleField.Equals(value) != true))
                    {
                        this.styleField = value;
                        this.OnPropertyChanged("Style");
                    }
                }
                else
                {
                    this.styleField = value;
                    this.OnPropertyChanged("Style");
                }
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actor")]
        public List<Actor> Actor
        {
            get
            {
                return this.actorField;
            }
            set
            {
                if ((this.actorField != null))
                {
                    if ((actorField.Equals(value) != true))
                    {
                        this.actorField = value;
                        this.OnPropertyChanged("Actor");
                    }
                }
                else
                {
                    this.actorField = value;
                    this.OnPropertyChanged("Actor");
                }
            }
        }

        /// <remarks/>
        public int PublishYear
        {
            get
            {
                return this.publishYearField;
            }
            set
            {
                if ((publishYearField.Equals(value) != true))
                {
                    this.publishYearField = value;
                    this.OnPropertyChanged("PublishYear");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string info)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null)
            {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    public enum Styles
    {

        /// <remarks/>
        Action,

        /// <remarks/>
        Fiction,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class Actors : System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<Actor> actorField;

        public Actors()
        {
            if ((this.actorField == null))
            {
                this.actorField = new List<Actor>();
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actor")]
        public List<Actor> Actor
        {
            get
            {
                return this.actorField;
            }
            set
            {
                if ((this.actorField != null))
                {
                    if ((actorField.Equals(value) != true))
                    {
                        this.actorField = value;
                        this.OnPropertyChanged("Actor");
                    }
                }
                else
                {
                    this.actorField = value;
                    this.OnPropertyChanged("Actor");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string info)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null)
            {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
}
